import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo
)
from aiogram.client.default import DefaultBotProperties

# üîë –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞
TOKEN = "7906993633:AAFtMKmNZAt_j6J5xLNOKFy0aIXdX23R9VI"

# üåê URL —Ç–≤–æ–µ–≥–æ WebApp (–Ω–∞–ø—Ä–∏–º–µ—Ä: GitHub Pages, Vercel –∏ —Ç.–ø.)
WEBAPP_URL = "https://xsilencex2.github.io/my-webapp/"

# üîß –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º HTML
bot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

# üì¶ Dispatcher
dp = Dispatcher(storage=MemoryStorage())

# üëã –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(lambda message: message.text == "/start")
async def start(message: Message):
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è WebApp
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –ú–µ–Ω—é –∫–∞—Ñ–µ", web_app=WebAppInfo(url=WEBAPP_URL))]
    ])

    await message.answer(
        f"""
üç∞ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ —É—é—Ç–Ω–æ–µ –∫–∞—Ñ–µ, {message.from_user.first_name}!</b>

‚òï –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–µ–Ω—é –∏ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ Telegram.

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–µ–Ω—é:
        """,
        reply_markup=keyboard
    )

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω... üü¢")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
